# Generated by Django 3.1.7 on 2021-06-07 11:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_number', models.IntegerField(primary_key=True, serialize=False)),
                ('BIC', models.CharField(max_length=60)),
                ('IBAN', models.CharField(max_length=60)),
                ('balance', models.FloatField()),
                ('creationDate', models.DateField()),
                ('isSuspended', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='BankWorker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('location', models.CharField(blank=True, max_length=50)),
                ('phone', models.IntegerField(blank=True)),
                ('cin', models.IntegerField()),
                ('available', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.IntegerField(blank=True)),
                ('location', models.CharField(blank=True, max_length=50)),
                ('email', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessClient',
            fields=[
                ('client_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='FrontEndApp.client')),
                ('name', models.CharField(max_length=30)),
                ('crn', models.IntegerField()),
            ],
            bases=('FrontEndApp.client',),
        ),
        migrations.CreateModel(
            name='CheckingAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='FrontEndApp.account')),
                ('insufficientFundsFee', models.FloatField()),
            ],
            bases=('FrontEndApp.account',),
        ),
        migrations.CreateModel(
            name='ParticularClient',
            fields=[
                ('client_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='FrontEndApp.client')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('cin', models.IntegerField()),
                ('sexe', models.CharField(max_length=10)),
            ],
            bases=('FrontEndApp.client',),
        ),
        migrations.CreateModel(
            name='SavingAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='FrontEndApp.account')),
                ('annualInterestRate', models.IntegerField()),
            ],
            bases=('FrontEndApp.account',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('BankWorker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FrontEndApp.bankworker')),
                ('Client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FrontEndApp.client')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('date', models.DateField()),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='beneficiary_id', to='FrontEndApp.account')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sender_id', to='FrontEndApp.account')),
            ],
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficiary_client_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='beneficiary_client_id', to='FrontEndApp.client')),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_id', to='FrontEndApp.client')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='Client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FrontEndApp.client'),
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('cardNumber', models.IntegerField()),
                ('dateDue', models.DateField()),
                ('amountDue', models.FloatField()),
                ('regularPayment', models.FloatField()),
                ('CheckingAccount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FrontEndApp.checkingaccount')),
            ],
        ),
    ]
